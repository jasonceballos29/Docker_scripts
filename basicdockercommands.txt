docker ps

docker ps -a

docker build 

docker images

docker rm -f $(docker ps -a -q)

docker rmi -f $(docker images -a -q)

docker exec -it dev1 /bin/sh

docker run --rm --name dev1 dev1

docker pause $(docker ps -l -q)

docker run -it -d ubuntu:bionic bash

docker exec -it dev1 /bin/sh

docker build -t dev1 .

docker volume create dev1-vol

docker volume ls

docker volume inspect dev1-vol

docker volume rm dev1-vol

docker inspect

docker kill

docker run -itd --name centos01 centos:centos7

docker run --network=wk18_nw -itd --name=week18test04 centos_luit

sudo docker run –itd –network=wk18_nw centos:centos7 /bin/bash

docker network create --driver=bridge --subnet=192.168.9.0/24 --gateway=192.168.9.10 wk18_nw

docker run -dp 5000:5000 --name dev1 --unmount source=dev1-vol,target=/app dev1

docker run -dp 5000:5000 --name dev1 --mount source=dev1-vol,target=/app dev1

docker import -c 'WORKDIR /app' -c 'ENTRYPOINT ["python"]' -c 'CMD ["app.py"]' test.tar dev:test

docker import test.tar dev:test

tar -tvf test.tar | grep app.py

docker export --output ="test.tar" $(docker ps -l -q)

docker exec -it $(docker ps -l -q) /bin/sh

#start the container with the info found in docker-compose.yml file in the directory
docker-compose up

#Run in detached mode.
docker-compose up -d

docker inspect dev1 | jq .[0].NetworkSettings.Networks[].IPAddress

docker network create -d overlay --opt encrypted pets-overlay docker service create --network pets-overlay --name db redis docker service create --network pets-overlay -p 8000:5000 -e DB=db --name web chrch/web

